name: 触发 streamlit 自动部署

on:
  workflow_dispatch:
  #schedule:
  #  - cron: '0 */12 * * *'
  repository_dispatch:
    types: [service-down-alert]

jobs:
  update-version:
    runs-on: ubuntu-latest

    steps:
      - name: 检查触发事件
        run: |
          echo "Workflow triggered by: ${{ github.event_name }}"
          if [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
            echo "触发事件类型 (Event Type): ${{ github.event.action }}"
            echo "收到来自 Uptime Kuma 的下线通知，开始执行自动恢复部署流程..."
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "工作流被手动触发，开始执行部署..."
          else
            echo "工作流由计划任务触发，开始执行部署..."
          fi
        
      - name: 检查仓库主分支
        uses: actions/checkout@v4

      - name: 获取当前北京时间以构造版本号
        id: time
        run: |
          TIMESTAMP=$(TZ='Asia/Shanghai' date +'%Y-%m-%d-%H:%M:%S')
          VERSION_LINE="# ver-$TIMESTAMP by yutian81"
          echo "version_line=$VERSION_LINE" >> $GITHUB_OUTPUT
          echo "commit_message=更新时间戳 - $TIMESTAMP" >> $GITHUB_OUTPUT

      - name: 更新 streamlit_app.py 文件的版本注释
        env:
          NEW_LINE: ${{ steps.time.outputs.version_line }}
        run: |
          FILE="streamlit_app.py"
          
          if grep -q "^# ver-" $FILE; then
            echo "已存在 '# ver-' 开头的旧版注释行，正在替换为新版注释行..."
            sed -i'' "s#^# ver-.*#${NEW_LINE}#" $FILE
          else
            echo "不存在 '# ver-' 开头的版本注释行，正在写入版本注释行到文件顶部..."
            sed -i'' "1i\\$NEW_LINE" $FILE
          fi

      - name: 提交并推送最新的改动
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: ${{ steps.time.outputs.commit_message }}
          branch: main
          file_pattern: streamlit_app.py
          commit_user_name: "github-actions[bot]"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
